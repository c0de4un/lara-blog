version: '3.8'

services:
  app:
    build:
      context: ./api
      dockerfile: ./Dockerfile
    container_name: http_app
    working_dir: /var/www
    volumes:
      - ./api:/var/www
    networks:
      - laravel

  nginx:
    image: nginx:alpine
    container_name: nginx_app
    ports:
      - "8000:80"
    volumes:
      - ./api:/var/www
      - ./http/nginx.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - app
    networks:
      - laravel

  mysql:
    image: mysql:8.0
    container_name: blog_mysql
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - MYSQL_CHARACTER_SET_SERVER=utf8mb4
      - MYSQL_COLLATION_SERVER=utf8mb4_unicode_ci
    ports:
      - "3306:3306"
    volumes:
      - ./db/data:/var/lib/mysql
    networks:
      - laravel
    command: --default-authentication-plugin=mysql_native_password --innodb-buffer-pool-size=128M --max-connections=100
    healthcheck:
      test: ["CMD", "sh", "-c", "mysqladmin ping -h localhost -u root -p$MYSQL_ROOT_PASSWORD"]
      timeout: 5s
      retries: 10
      start_period: 30s
    restart: unless-stopped

  frontend:
    build:
      context: ./web
      dockerfile: Dockerfile
    container_name: frontend_dev
    ports:
      - "5173:5173"
    volumes:
      - ./web:/app
      - /app/node_modules
    working_dir: /app
    networks:
      - laravel
    environment:
      - NODE_ENV=development

networks:
  laravel:
    driver: bridge